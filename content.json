{"meta":{"title":"Topredator","subtitle":"人生若只如初见","description":"Topredator的个人博客","author":"Topredator","url":"https://topredator.github.io","root":"/"},"pages":[{"title":"about","date":"2019-03-16T07:32:26.000Z","updated":"2019-03-16T07:32:26.689Z","comments":true,"path":"about/index.html","permalink":"https://topredator.github.io/about/index.html","excerpt":"","text":""},{"title":"categories","date":"2019-03-16T07:44:51.000Z","updated":"2019-03-16T07:45:28.557Z","comments":true,"path":"categories/index.html","permalink":"https://topredator.github.io/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"Git的命令使用","slug":"Git的命令使用","date":"2019-03-15T07:02:36.604Z","updated":"2019-03-16T08:37:24.604Z","comments":false,"path":"2019/03/15/Git的命令使用/","link":"","permalink":"https://topredator.github.io/2019/03/15/Git的命令使用/","excerpt":"常用的命令使用","text":"常用的命令使用 配置git config [--local / --gloab / --system] user.name &#39;XXXXX&#39;git config [--local / --gloab / --system] user.email &#39;XXXX&#39;注释：local 区域为本仓库 / global 当前用户的所有仓库 / system 本系统的所有用户 loggit log --all 查看所有分支的历史 git log --all --graph 查看图形化的 log 地址 git log --oneline 查看单行的简洁历史 git log --oneline -n4 查看最近的四条简洁历史 git log --oneline --all -n4 --graph 查看所有分支最近 4 条单行的图形化历史 git help --web log 跳转到git log 的帮助文档网页 git mv readme readme.md 直接用git更改文件名 git cat-file -p &#39;commitId&#39; 查看commit对象 比较两次commit差异 git diff &#39;commitId1&#39; &#39;commitId2&#39; 或者 git diff HEAD [HEAD^/HEAD~1] 暂存区与HEAD的比较 git diff --cached ####更改之前的commit提交的信息 git rebase -i [super commitId] pick 改为 reword/r 合并多个commitgit rebase -i [super commitId] 保留一个pick，将需要融合的commit方到pick的下面，前面的pick改为 squash/s 取消合并git rebase --abort 分支创建： git branch &lt;branchName&gt; 查看： git branch(本地) git branch -a(远端) 切换： git checkout &lt;branchName&gt; 创建+切换： git checkout -b &lt;branchName&gt; 删除： git branch -d &lt;branchName&gt; git branch -D &lt;branchName&gt;(强行删除) git push &lt;origin&gt; --delete &lt;branchName&gt;(删除远端分支) 合并： git merge &lt;branchName&gt; git rebase &lt;branchName&gt; merge 快速合并，看不到曾经合并；merge –no-ff 普通合并，可看历史合并； 查看分支合并图： git log --graph 拉取远端分支（本地无此分支）： git checkout -b &lt;branchName&gt; &lt;origin&gt;/&lt;branchName&gt; 若失败，先fetch，再执行 标签创建： git tag &lt;tagName&gt; git tag &lt;tagName&gt; &lt;commit id&gt; 查看： git tag git show &lt;tagName&gt; 给已提交的内容打tag： git tag &lt;tagName&gt; &lt;commit id&gt; 指定标签信息： git tag -a &lt;tagName&gt; -m &quot;xxx&quot; 删除： git tag -d &lt;tagName&gt; git push &lt;origin&gt; :ref/tags/&lt;tagName&gt;(删除远端，先删除本地) 推送： git push &lt;origin&gt; &lt;tagName&gt; git push &lt;origin&gt; --tags 关联git remote add &lt;origin&gt; &lt;url&gt; 推送： git push -u origin master(第一次推送) git push &lt;origin&gt; master 克隆： git clong &lt;url&gt; 本地分支与远端分支建立连接： git branch --set-upstream-to &lt;localBranchName&gt; &lt;origin&gt;/&lt;remoteBranchName&gt; 储藏储藏： git stash 查看储藏现场： git stash list 恢复现场： git stash apply(不删除现场) git stash pop(删除现场) 撤销没有add，没有commit： git checkout --file &lt;file&gt; add后，没有commit： git reset HEAD &lt;file&gt; git reset HEAD add且commit： git reset --hard &lt;HEAD^&gt; git reset --hard &lt;commit id&gt;","categories":[],"tags":[{"name":"Git","slug":"Git","permalink":"https://topredator.github.io/tags/Git/"}]},{"title":"Hello World","slug":"hello-world","date":"2019-03-15T05:37:18.779Z","updated":"2019-03-15T05:37:18.779Z","comments":true,"path":"2019/03/15/hello-world/","link":"","permalink":"https://topredator.github.io/2019/03/15/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}